{"version":3,"sources":["../src/merge.js"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","isPlainObject","obj","call","hasOwnConstructor","hasIsPrototypeOf","constructor","key","merge","i","src","copy","clone","name","result","current","length","arguments"],"mappings":"AAAA,a,6EAEA,GAAIA,CAAAA,MAAM,CAAGC,MAAM,CAACC,SAAP,CAAiBC,cAA9B,CACA,GAAIC,CAAAA,KAAK,CAAGH,MAAM,CAACC,SAAP,CAAiBG,QAA7B,CAEA,GAAIC,CAAAA,aAAa,CAAG,QAASA,CAAAA,aAAT,CAAuBC,GAAvB,CAA4B,CAC9C,GAAI,CAACA,GAAD,EAAQH,KAAK,CAACI,IAAN,CAAWD,GAAX,IAAoB,iBAAhC,CAAmD,CACjD,MAAO,MAAP,CACD,CAED,GAAIE,CAAAA,iBAAiB,CAAGT,MAAM,CAACQ,IAAP,CAAYD,GAAZ,CAAiB,aAAjB,CAAxB,CACA,GAAIG,CAAAA,gBAAgB,CAAGH,GAAG,CAACI,WAAJ,EAAmBJ,GAAG,CAACI,WAAJ,CAAgBT,SAAnC,EAAgDF,MAAM,CAACQ,IAAP,CAAYD,GAAG,CAACI,WAAJ,CAAgBT,SAA5B,CAAuC,eAAvC,CAAvE,CAEA,GAAIK,GAAG,CAACI,WAAJ,EAAmB,CAACF,iBAApB,EAAyC,CAACC,gBAA9C,CAAgE,CAC9D,MAAO,MAAP,CACD,CAID,GAAIE,CAAAA,GAAJ,CACA,IAAKA,GAAL,GAAYL,CAAAA,GAAZ,CAAiB,CAAM,CAEvB,MAAO,OAAOK,CAAAA,GAAP,GAAe,WAAf,EAA8BZ,MAAM,CAACQ,IAAP,CAAYD,GAAZ,CAAiBK,GAAjB,CAArC,CACD,CAlBD,CAoBO,QAASC,CAAAA,KAAT,EAAiB,CACtB,GAAIC,CAAAA,CAAJ,CAAOC,GAAP,CAAYC,IAAZ,CAAkBC,KAAlB,CAAyBC,IAAzB,CACIC,MAAM,CAAG,EADb,CAEGC,OAAO,CAAG,IAFb,CAGIC,MAAM,CAAGC,SAAS,CAACD,MAHvB,CAKA,IAAKP,CAAC,CAAC,CAAP,CAAUA,CAAC,CAAGO,MAAd,CAAsBP,CAAC,EAAvB,CAA2B,CACzBM,OAAO,CAAGE,SAAS,CAACR,CAAD,CAAnB,CACA,GAAIM,OAAO,EAAI,IAAf,CAAqB,CACnB,SACD,CAED,IAAKF,IAAL,GAAaE,CAAAA,OAAb,CAAsB,CACpBL,GAAG,CAAGI,MAAM,CAACD,IAAD,CAAZ,CACAF,IAAI,CAAGI,OAAO,CAACF,IAAD,CAAd,CACA,GAAIC,MAAM,GAAKH,IAAf,CAAqB,CACnB,GAAIA,IAAI,EAAIV,aAAa,CAACU,IAAD,CAAzB,CAAiC,CAC/BC,KAAK,CAAGF,GAAG,EAAIT,aAAa,CAACS,GAAD,CAApB,CAA4BA,GAA5B,CAAkC,EAA1C,CACAI,MAAM,CAACD,IAAD,CAAN,CAAeL,KAAK,CAACI,KAAD,CAAQD,IAAR,CAApB,CACD,CAHD,IAGO,IAAI,MAAOA,CAAAA,IAAP,GAAgB,WAApB,CAAiC,CACtCG,MAAM,CAACD,IAAD,CAAN,CAAeF,IAAf,CACD,CACF,CACF,CACF,CACD,MAAOG,CAAAA,MAAP,CACD","sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isPlainObject = function isPlainObject(obj) {\n  if (!obj || toStr.call(obj) !== '[object Object]') {\n    return false;\n  }\n\n  var hasOwnConstructor = hasOwn.call(obj, 'constructor');\n  var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n  // Not own constructor property must be Object\n  if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n    return false;\n  }\n\n  // Own properties are enumerated firstly, so to speed up,\n  // if last one is own, then all properties are own.\n  var key;\n  for (key in obj) {/**/}\n\n  return typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nexport function merge() {\n  var i, src, copy, clone, name,\n      result = {},\n     current = null,\n      length = arguments.length;\n\n  for (i=0; i < length; i++) {\n    current = arguments[i];\n    if (current == null) {\n      continue;\n    }\n\n    for (name in current) {\n      src = result[name];\n      copy = current[name];\n      if (result !== copy) {\n        if (copy && isPlainObject(copy)) {\n          clone = src && isPlainObject(src) ? src : {};\n          result[name] = merge(clone, copy);\n        } else if (typeof copy !== 'undefined') {\n          result[name] = copy;\n        }\n      }\n    }\n  }\n  return result;\n}\n"],"file":"merge.js"}